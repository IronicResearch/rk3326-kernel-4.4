From a42bbabf69f8c327481196d8b28ab075069178a2 Mon Sep 17 00:00:00 2001
From: wjt <wjt@incartech.cn>
Date: Sat, 7 Mar 2020 09:37:33 +0800
Subject: [PATCH] modify otg power support

---
 .../arm64/boot/dts/rockchip/rk3326-863-lp3-v10.dts |  2 +-
 drivers/mfd/rk808.c                                | 53 +++++++++++++++++++---
 drivers/phy/rockchip/phy-rockchip-inno-usb2.c      | 16 ++++++-
 3 files changed, 62 insertions(+), 9 deletions(-)
 mode change 100644 => 100755 drivers/phy/rockchip/phy-rockchip-inno-usb2.c

diff --git a/arch/arm64/boot/dts/rockchip/rk3326-863-lp3-v10.dts b/arch/arm64/boot/dts/rockchip/rk3326-863-lp3-v10.dts
index 5825969..628e775 100755
--- a/arch/arm64/boot/dts/rockchip/rk3326-863-lp3-v10.dts
+++ b/arch/arm64/boot/dts/rockchip/rk3326-863-lp3-v10.dts
@@ -1597,7 +1597,7 @@ clock-frequency = <200000>;
 
 	u2phy_otg: otg-port {
 	//  vbus-supply = <&vcc5v0_host>;
-		vbus-supply = <&otg_switch>;
+	//	vbus-supply = <&otg_switch>;
 		rockchip,low-power-mode;
 		status = "okay";
 	};
diff --git a/drivers/mfd/rk808.c b/drivers/mfd/rk808.c
index f5ac0ac..b1ea58d 100755
--- a/drivers/mfd/rk808.c
+++ b/drivers/mfd/rk808.c
@@ -906,7 +906,7 @@ void rk808_get_swout2(void)
        u32  data;
        struct rk808 *rk808 = i2c_get_clientdata(rk808_i2c_client);
        regmap_read(rk808->regmap, 0xb4, &data);
-       pr_info("new  cjc: %x %x\n", 0xb4, data);
+      // pr_info("new  cjc: %x %x\n", 0xb4, data);
       // regmap_read(rk808->regmap, 0x7f, &data);
       // pr_info("new  cjc: %x %x\n", 0x7f, data);
 }
@@ -916,24 +916,63 @@ void rk808_set_swout2(int flag)
        u32  data;
        struct rk808 *rk808 = i2c_get_clientdata(rk808_i2c_client);
        regmap_read(rk808->regmap, 0xb4, &data);
-       pr_info("new  cjc: %x %x\n", 0xb4, data);
+       //pr_info("new  cjc: %x %x\n", 0xb4, data);
        if(flag == 0)
        {
-       	   pr_info("set 0xb4  0x03\n");
+       	   //pr_info("set 0xb4  0x03\n");
            regmap_write(rk808->regmap, 0xb4, 0x83);    
        }
        else if(flag == 1)
        {
-       	   pr_info("set 0xb4  0x0b\n");
+       	  // pr_info("set 0xb4  0x0b\n");
            regmap_write(rk808->regmap, 0xb4, 0x8b);            
-          pr_info("write ....\n");
+         // pr_info("write ....\n");
 	
-       	  regmap_read(rk808->regmap, 0xb4, &data);
-          pr_info("read  cjc: %x %x\n", 0xb4, data);
+       	  //regmap_read(rk808->regmap, 0xb4, &data);
+          //pr_info("read  cjc: %x %x\n", 0xb4, data);
        }
 }
 
 
+void rk808_set_swout1(int flag)
+{
+       u32  data;
+	if(rk808_i2c_client == NULL)
+	{
+		printk("rk808_i2c_client is NULL\n");
+                return ;
+	}
+       	struct rk808 *rk808 = i2c_get_clientdata(rk808_i2c_client);
+
+	if(rk808->regmap == NULL)
+	{
+		printk("rk808->regmap is NULL\n");
+		return ;
+	}
+       regmap_read(rk808->regmap, 0xb4, &data);
+       //pr_info("new  cjc: %x %x\n", 0xb4, data);
+       if(flag == 0)
+       {
+	  data = ((data)  | (1 << 6)) & (~(1 << 2));
+          //pr_info("0 set 0xb4  0x%x\n",data);
+          regmap_write(rk808->regmap, 0xb4, data);
+          regmap_read(rk808->regmap, 0xb4, &data);
+          pr_info("0 read  cjc: %x %x\n", 0xb4, data);
+       }
+       else if(flag == 1)
+       {
+	   data = data | (1 << 6) | ( 1 << 2); 	
+           //pr_info("1 set 0xb4  0x%x\n",data);
+           regmap_write(rk808->regmap, 0xb4, data);
+          //pr_info("write ....\n");
+
+          regmap_read(rk808->regmap, 0xb4, &data);
+          pr_info("1 read  cjc: %x %x\n", 0xb4, data);
+       }
+}
+
+
+
 static ssize_t rk8xx_dbg_store(struct device *dev,
 			       struct device_attribute *attr,
 			       const char *buf, size_t count)
diff --git a/drivers/phy/rockchip/phy-rockchip-inno-usb2.c b/drivers/phy/rockchip/phy-rockchip-inno-usb2.c
old mode 100644
new mode 100755
index 66fb407..2e100a1
--- a/drivers/phy/rockchip/phy-rockchip-inno-usb2.c
+++ b/drivers/phy/rockchip/phy-rockchip-inno-usb2.c
@@ -43,6 +43,7 @@
 #define OTG_SCHEDULE_DELAY	(1 * HZ)
 #define BYPASS_SCHEDULE_DELAY	(2 * HZ)
 
+extern void rk808_set_swout1(int flag);
 struct rockchip_usb2phy;
 
 enum rockchip_usb2phy_port_id {
@@ -749,11 +750,20 @@ static int rockchip_set_vbus_power(struct rockchip_usb2phy_port *rport,
 				   bool en)
 {
 	int ret = 0;
-
+	if(en)
+	{
+		rk808_set_swout1(1);
+	}
+	else
+	{
+		rk808_set_swout1(0);	
+	}
 	if (!rport->vbus)
 		return 0;
+	
 
 	if (en && !rport->vbus_enabled) {
+
 		ret = regulator_enable(rport->vbus);
 		if (ret)
 			dev_err(&rport->phy->dev,
@@ -1456,10 +1466,14 @@ static irqreturn_t rockchip_usb2phy_id_irq(int irq, void *data)
 		property_enable(rphy, &rport->port_cfg->idfall_det_clr,
 				true);
 		cable_vbus_state = true;
+		printk("function = %s, line = %d, true\n",__FUNCTION__,__LINE__);
+		//rk808_set_swout1(1);
 	} else if (property_enabled(rphy, &rport->port_cfg->idrise_det_st)) {
 		property_enable(rphy, &rport->port_cfg->idrise_det_clr,
 				true);
 		cable_vbus_state = false;
+		printk("function = %s, line = %d, false\n",__FUNCTION__,__LINE__);
+		//rk808_set_swout1(0);
 	}
 
 	extcon_set_state(rphy->edev, EXTCON_USB_HOST, cable_vbus_state);
-- 
2.7.4

